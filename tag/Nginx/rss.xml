<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>blog.ashishapy.com</title>
   
   <link>https://blog.ashishapy.com/</link>
   <description>Amused at technology</description>
   <language>en-uk</language>
   <managingEditor> Ashish Pandey</managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>Part 2/2 - Configure SSL on nginx web server</title>
	  <link>//2015/05/part-22-configure-nginx-web-server/</link>
	  <author>Ashish Pandey</author>
	  <pubDate>2015-05-17T19:08:04+00:00</pubDate>
	  <guid>//2015/05/part-22-configure-nginx-web-server/</guid>
	  <description><![CDATA[
	     <p>nginx (pronounced engine-x) is a free, open-source, light-weight, high-performance, load balancer, HTTP cache, and a web server.</p>

<p>The StartSSL certificate is compatible with nginx. Configure ngnix to use it in this last part of the series.</p>

<hr />
<p>Previous:</p>

<ul>
  <li><a href="/2015/05/get-ssl-certificate-free-enable-https-on-nginx/">Introduction: Get SSL Certificate (Free) &amp; Enable https on nginx</a></li>
  <li><a href="/2015/05/signup-for-startssl/">Signup for StartSSL</a></li>
  <li><a href="/2015/05/part-12-get-ssl-certificate-free/">Part 1/2 - Get SSL certificate (free)</a></li>
</ul>

<hr />
<p>We need to modify nginx.conf file, in my case it is located at /etc/ngnix folder.</p>

<p><strong>Synopsis:</strong> 
Topics covered are, roughly. 
A. Place SSL certificate &amp; private key file on server
B. Configure nginx for SSL
C. Include some important security stuff on nginx
D. Check grade on <a href="https://www.ssllabs.com/">SSLlabs</a></p>

<p>we already have done most time consuming task for SSL. Now it’s time to feel good. Let’s finish the job.</p>

<ol>
  <li>Go to your nginx folder &amp; create a directory name ‘ssl’. This is the directory we will use to keep SSL certificate &amp; private key
<code>[nginx]$mkdir ssl</code>
Place both files (ssl-unified.crt &amp; ssl.key) in the folder. There are several ways to do this.
I created empty files with same name in ‘ssl’ folder on server.</li>
</ol>

<p><code>[nginx]$cd ssl
 [ssl]$sudo nano ssl-unified.crt
 </code>
 Copy and paste the content of local ssl-unified.crt file. Save it <code>ctrl+o</code> then exit <code>ctrl+x</code>.</p>

<p><code>[ssl]$sudo nano ssl.key
 </code>
 Copy and paste the content of local ssl.key file. Save it <code>ctrl+o</code> then exit <code>ctrl+x</code>.</p>

<p>Verify if both files are there. <code>[ssl]$ls -l</code>.</p>

<p>As pointed in previous blog, Protect your key from prying eyes. Run
<code>chmod 600 ssl.key</code> command.</p>

<ol>
  <li>
    <p>Finally we’re able to configure nginx. Here’s the config I’m using (don’t forget to reload/restart nginx after a config change)
 <code>
 http {
   ...
   server\_tokens off;
   add\_header X-Frame-Options SAMEORIGIN;
   add\_header X-XSS-Protection "1; mode=block";
#
   server {
     listen 80;
     server\_name  .yourDomain.com;
     return 301 https://$host$request\_uri;
#
     location / {
             ...
     }
     ...
   }
   # HTTPS server
   server {
     listen 443 ssl default deferred;
     server\_name .yourDomain.com;
#
     ssl on;
     ssl\_certificate /etc/nginx/ssl/ssl-unified.crt;
     ssl\_certificate\_key /etc/nginx/ssl/ssl.key;
#
     ssl\_session_cache shared:SSL:50m;
     ssl\_session\_timeout 5m;
#
     ssl\_protocols TLSv1 TLSv1.1 TLSv1.2;
     ssl\_ciphers HIGH:!aNULL:!MD5;
     ssl\_prefer\_server\_ciphers on;
#
     add\_header Strict-Transport-Security "max-age=31536000; includeSubdomains;";
#
     location / {
             ...
     }
   }
 }
</code>
Save the nginx.conf.
If you are interested to see some more security parameters and it’s explanation, there is nice gist https://gist.github.com/plentz/6737338. It’s worth to check it out.</p>
  </li>
  <li>
    <p>Restart nginx to get nginx.conf changes.
<code>$sudo service nginx restart</code>
 If above command doesn’t work for you then you might want to refer this  http://nginx.org/en/docs/beginners_guide.html#control</p>
  </li>
</ol>

<p>Open browser and enter http://yourDomain.com it should go to https://yourDomain.com automatically with green padlock.</p>

<p><img src="//cdn.ashishapy.com/2015/May/15944989872_b958dc5552_m-1431886959872.jpg" alt="https" /></p>

<p>Congratulations!!! You have successfully installed SSL and enabled your domain for https.</p>

<ol>
  <li>It’s time to go through litmus test, not really. Go to SSLLabs website https://www.ssllabs.com/ssltest/ for ssltest.
Enter your domain name &amp; hit enter. It takes couple of mins to return with test result.
Bingo! You must have got A grade, as I got.
<img src="//cdn.ashishapy.com/2015/May/SSLLab_Summary-1431887799187.jpg" alt="SSLLab test summary" />
Smile :) This is very very good rating.
I am sure, A+ rating can be achieved with few more config on nginx.</li>
</ol>

<p>Seriously, if you made it through the entire guide, it’s very impressive. Enjoy your SSL cert and let me know your experience / remarks through twitter link or email me at ashish@ashishapy.com.</p>

<p>Happy Learning!</p>

	  ]]></description>
	</item>


</channel>
</rss>
